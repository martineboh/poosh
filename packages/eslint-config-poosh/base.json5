{
  parser: "babel-eslint",
  extends: "eslint:recommended",
  plugins: ["flow-vars", "babel"],
  globals: {
    // Flow
    Iterator: true,
    $Keys: true
  },
  rules: {

    // Possible Errors
    "comma-dangle": [2, "never"],
    "no-cond-assign": [2, "always"],
    "no-console": 2,
    "no-constant-condition": 2,
    "no-control-regex": 2,
    "no-debugger": 2,
    "no-dupe-args": 2,
    "no-dupe-keys": 2,
    "no-duplicate-case": 2,
    "no-empty-character-class": 2,
    "no-empty": 2,
    "no-ex-assign": 2,
    "no-extra-boolean-cast": 2,
    "no-extra-parens": 2,
    "no-extra-semi": 2,
    "no-func-assign": 2,
    "no-inner-declarations": [2, "both"],
    "no-invalid-regexp": 2,
    "no-irregular-whitespace": 2,
    "no-negated-in-lhs": 2,
    "no-obj-calls": 2,
    "no-regex-spaces": 2,
    "no-sparse-arrays": 2,
    "no-unreachable": 2,
    "use-isnan": 2,

    // TODO: requireParamType: false -> Submit issue on github?
    // https://github.com/facebook/flow/issues/43
    // https://github.com/facebook/flow/issues/3
    // http://flowtype.org/blog/2015/02/20/Flow-Comments.html
    "valid-jsdoc": [0, {
      requireReturn: false,
      requireParamDescription: false,
      requireReturnDescription: false,
      requireReturnType: false,
      prefer: {
        "virtual": "abstract",
        "extends": "augments",
        "constructor": "class",
        "constant": "const",
        "defaultvalue": "default",
        "desc": "description",
        "host": "external",
        "fileoverview": "file",
        "overview": "file",
        "emits": "fires",
        "func": "function",
        "method": "function",
        "var": "member",
        "arg": "param",
        "argument": "param",
        "prop": "property",
        "return": "returns",
        "exception": "throws",
        "linkcode": "link",
        "linkplain": "link"
      },
      "preferType": {
        "String": "string",
        "object": "Object",
        "Number": "number",
        "Boolean": "boolean",
      }
    }],
    "valid-typeof": 2,

    // Best Practices
    "accessor-pairs": [2, { getWithoutSet: true , setWithoutGet: true }],
    "block-scoped-var": 2,
    "complexity": [2, 10],
    "consistent-return": 0,
    "curly": 2,
    "default-case": 2,
    "dot-notation": [2, { allowKeywords: true }],
    "dot-location": [2, "property"],
    "eqeqeq": [2, "smart"],
    "guard-for-in": 2,
    "no-alert": 2,
    "no-caller": 2,
    "no-div-regex": 2,
    "no-else-return": 2,
    "no-labels": 2,
    "no-eq-null": 2,
    "no-eval": 2,
    "no-extend-native": 2,
    "no-extra-bind": 2,
    "no-fallthrough": 2,
    "no-floating-decimal": 2,
    "no-implied-eval": 2,
    "no-iterator": 2,
    "no-lone-blocks": 2,
    "no-loop-func": 2,
    "no-multi-spaces": 2,
    "no-multi-str": 2,
    "no-native-reassign": 2,
    "no-new-func": 2,
    "no-new-wrappers": 2,
    "no-new": 2,
    "no-octal-escape": 2,
    "no-octal": 2,
    "no-param-reassign": 0,
    "no-process-env": 2,
    "no-proto": 2,
    "no-redeclare": 2,
    "no-return-assign": 0,
    "no-script-url": 2,
    "no-self-compare": 2,
    "no-sequences": 2,
    "no-throw-literal": 2,
    "no-unused-expressions": 2,
    "no-void": 2,
    "no-warning-comments": [0, { terms: ["todo", "fixme"], location: "anywhere" }],
    "no-with": 2,
    "radix": 2,
    "vars-on-top": 2,
    "wrap-iife": [2, "outside"],
    "yoda": [2, "never", { exceptRange: true }],

    // Strict Mode
    "strict": [2, "global"],

    // Variables
    "no-catch-shadow": 2,
    "no-delete-var": 2,
    "no-label-var": 2,
    "no-shadow-restricted-names": 2,
    "no-shadow": 2,
    "no-undef-init": 2,
    "no-undef": 2,
    "no-undefined": 0,
    "no-unused-vars": [2, { vars: "all", args: "after-used" }],
    "no-use-before-define": 2,

    // Node.js
    "handle-callback-err": [2, "err"],
    "no-mixed-requires": 2,
    "no-new-require": 2,
    "no-path-concat": 2,
    "no-process-exit": 2,
    "no-restricted-modules": 0,
    "no-sync": 0,

    // Stylistic Issues
    "brace-style": [2, "1tbs", { allowSingleLine: false }],
    "camelcase": [2, { properties: "always" }],
    "comma-spacing": [2, { before: false, after: true }],
    "consistent-this": [2, "self"],
    "eol-last": 2,
    "func-names": 0,
    "func-style": [0, "expression"], // TODO: Hum... https://github.com/eslint/eslint/issues/5183
    "indent": [2, 2, { SwitchCase: 1 }],

    // TODO: Hum...
    "key-spacing": [0, {
      singleLine: {
        beforeColon: false,
        afterColon: true
      },
      multiLine: {
        beforeColon: true,
        afterColon: true,
        mode: "minimum"
      }
    }],
    "lines-around-comment": [2, {
      beforeBlockComment: true,
      afterBlockComment: false,
      afterLineComment: false
    }],
    "linebreak-style": [2, "unix"],
    "max-nested-callbacks": [2, 2],
    "new-cap": [2, { newIsCap: true, capIsNew: true }],
    "new-parens": 2,
    "newline-after-var": 0,
    "no-array-constructor": 2,
    "no-continue": 0,
    "no-inline-comments": 0,
    "no-lonely-if": 2,
    "no-mixed-spaces-and-tabs": 2,
    "no-multiple-empty-lines": [2, { max: 1 }],
    "no-nested-ternary": 2,
    "no-new-object": 2,
    "no-spaced-func": 2,
    "no-ternary": 0,
    "no-trailing-spaces": [2, { skipBlankLines: false }],
    "no-underscore-dangle": [2, { allowAfterThis: true }],
    "no-unneeded-ternary": 2,
    "object-curly-spacing": [2, "always"],
    "one-var": [2, "never"],
    "operator-assignment": [2, "always"],
    "operator-linebreak": [2, "before"],
    //"padded-blocks": [2, { "switches": "always" }], // TODO: Error?!
    "quote-props": [2, "consistent-as-needed", { keywords: true }],
    "quotes": [2, "double", "avoid-escape"],
    "semi-spacing": [2, { "before": false, "after": true }],
    "semi": [2, "always"],
    "sort-vars": [2, { "ignoreCase": false }],
    "keyword-spacing": [2, { before: true, after: true, overrides: {} }],
    "space-before-blocks": [2, "always"],
    "space-before-function-paren": [2, "always"],
    "space-in-parens": [2, "never"],
    "space-infix-ops": [2, { int32Hint: false }],
    "space-unary-ops": [2, { words: true, nonwords: false }],
    "wrap-regex": 2,

    // ECMAScript 6
    "arrow-spacing": [2, { before: true, after: true }],
    "generator-star-spacing": [2, "after"],
    "no-class-assign": 2,
    "no-confusing-arrow": 2,
    "no-const-assign": 2,
    "no-var": 2,
    "object-shorthand": 2,
    "prefer-const": 0, // TODO: Hum... let's consider this later..
    "prefer-reflect": 2,
    "prefer-rest-params": 2,
    "prefer-spread": 2,
    "prefer-template": 0,

    // Legacy
    "max-depth": [2, 3],
    "max-len": [2, 110, 4],
    "max-params": [2, 4],
    "max-statements": [2, 25],
    "no-bitwise": 2,
    "no-plusplus": 0,

    // Flow
    "flow-vars/define-flow-type": 1,
    "flow-vars/use-flow-type": 1
  }
}
